<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="binary_8cpp" kind="file" language="C++">
    <compoundname>binary.cpp</compoundname>
    <includes refid="binary_8hpp" local="no">L/base/binary.hpp</includes>
    <incdepgraph>
      <node id="1">
        <label>src/L/base/binary.cpp</label>
        <link refid="binary_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>L/base/binary.hpp</label>
        <link refid="binary_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>L.hpp</label>
        <link refid="_l_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>new</label>
      </node>
      <node id="6">
        <label>cstdlib</label>
      </node>
      <node id="4">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_l">L</innernamespace>
    <innernamespace refid="namespace_l_1_1_base">L::Base</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="binary_8hpp" kindref="compound">L/base/binary.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2" refid="namespace_l" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_l" kindref="compound">L</ref>{</highlight></codeline>
<codeline lineno="3" refid="namespace_l_1_1_base" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Base{</highlight></codeline>
<codeline lineno="4" refid="namespace_l_1_1_base_1ab182af3b6b610cd1fb642215737aedaa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_l_1_1_base_1ab182af3b6b610cd1fb642215737aedaa" kindref="member">IsLittleEndian</ref>(){</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>&amp;n<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/L/base/binary.cpp"/>
  </compounddef>
</doxygen>
